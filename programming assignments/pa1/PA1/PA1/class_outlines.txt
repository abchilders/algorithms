STILL IN PROGRESS

This is an outline of all the classes and their methods available
to me, for my own reference:

class BinaryFile
{
public: 
	//writes a vector of strings to a file.  Assumes each character in each string is either a 0 or 1
	static void writeToFile(const vector<bool> &content, const string &output_file_name);

	//reads a file written with writeToFile into a vector of bools
	// ALEX'S NOTE: this vector of bools is used to represent the compression
	static vector<bool> readFromFile(const string &input_file_name);


};

class HuffmanTree
{
private:
	// pointer to the root of the tree
	HuffmanNode<T> *_root; 

public:
	// constructor - creates tree with one Huffman node
	HuffmanTree(const T& value, const int &weight); 

	// returns the root node of the tree
	HuffmanNode<T> *getRoot();

	// constructor - creates a tree with two Huffman leaf nodes?
	HuffmanTree(HuffmanTree<T> *left, HuffmanTree<T> *right);

	// constructor - the internal node given becomes the root of this tree
	HuffmanTree(HuffmanInternalNode<T> *root);

	// destructor
	~HuffmanTree();

	// returns the root's weight?
	virtual int getWeight();
}